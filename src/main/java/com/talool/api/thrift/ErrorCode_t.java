/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.talool.api.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum ErrorCode_t implements org.apache.thrift.TEnum {
  UNKNOWN(0),
  VALID_EMAIL_REQUIRED(100),
  PASS_REQUIRED(101),
  PASS_CONFIRM_MUST_MATCH(102),
  PASS_RESET_CODE_REQUIRED(103),
  PASS_RESET_CODE_EXPIRED(104),
  PASS_RESET_CODE_INVALID(105),
  EMAIL_ALREADY_TAKEN(1000),
  INVALID_USERNAME_OR_PASSWORD(1001),
  CUSTOMER_DOES_NOT_OWN_DEAL(1002),
  DEAL_ALREADY_REDEEMED(1003),
  GIFTING_NOT_ALLOWED(1004),
  CUSTOMER_NOT_FOUND(1005),
  EMAIL_REQUIRED(1006),
  EMAIL_OR_PASS_INVALID(1007),
  GENERAL_PROCESSOR_ERROR(1500),
  ACTIVIATION_CODE_NOT_FOUND(3000),
  ACTIVIATION_CODE_ALREADY_ACTIVATED(3001);

  private final int value;

  private ErrorCode_t(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static ErrorCode_t findByValue(int value) { 
    switch (value) {
      case 0:
        return UNKNOWN;
      case 100:
        return VALID_EMAIL_REQUIRED;
      case 101:
        return PASS_REQUIRED;
      case 102:
        return PASS_CONFIRM_MUST_MATCH;
      case 103:
        return PASS_RESET_CODE_REQUIRED;
      case 104:
        return PASS_RESET_CODE_EXPIRED;
      case 105:
        return PASS_RESET_CODE_INVALID;
      case 1000:
        return EMAIL_ALREADY_TAKEN;
      case 1001:
        return INVALID_USERNAME_OR_PASSWORD;
      case 1002:
        return CUSTOMER_DOES_NOT_OWN_DEAL;
      case 1003:
        return DEAL_ALREADY_REDEEMED;
      case 1004:
        return GIFTING_NOT_ALLOWED;
      case 1005:
        return CUSTOMER_NOT_FOUND;
      case 1006:
        return EMAIL_REQUIRED;
      case 1007:
        return EMAIL_OR_PASS_INVALID;
      case 1500:
        return GENERAL_PROCESSOR_ERROR;
      case 3000:
        return ACTIVIATION_CODE_NOT_FOUND;
      case 3001:
        return ACTIVIATION_CODE_ALREADY_ACTIVATED;
      default:
        return null;
    }
  }
}
